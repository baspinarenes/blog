---
import { Icon as AstroIcon } from "astro-icon/components";

type Props = {
  name: string;
  size?: number;
  class?: string;
  colored?: boolean;
};

const {
  name,
  size = 20,
  class: className,
  colored = false,
} = Astro.props as Props;

enum IconName {
  ARTICLES = "articles",
  BACK = "back",
  BASH = "bash",
  BROWSER = "browser",
  BULLET = "bullet",
  CLOCK = "clock",
  CLOSE = "close",
  COFFEE = "coffee",
  COPY = "copy",
  CSS = "css",
  CULTURES = "cultures",
  DANGER = "danger",
  DOCKER = "docker",
  ESLINT = "eslint",
  EXTERNAL_LINK = "external-link",
  FULLSTACK = "fullstack",
  GIT = "git",
  GITHUB = "github",
  GITLAB = "gitlab",
  HOME = "home",
  HTML = "html",
  IMPORTANT = "important",
  INFO = "info",
  JAVASCRIPT = "javascript",
  JOURNEY = "journey",
  KUBERNETES = "kubernetes",
  LESS = "less",
  LINKEDIN = "linkedin",
  LOGO = "logo",
  MENU = "menu",
  NODEJS = "nodejs",
  NPM = "npm",
  PACKAGE = "package",
  PERFORMANCE = "performance",
  SCSS = "scss",
  SEARCH = "search",
  SNIPPETS = "snippets",
  SOFTWARE_DESIGN = "software-design",
  SQL = "sql",
  SWIFT = "swift",
  THOUGHTS = "thoughts",
  TOOLKIT = "toolkit",
  TRANSLATE = "translate",
  TWITTER = "twitter",
  TYPESCRIPT = "typescript",
  VIEW = "view",
  VIEWS = "views",
  WARNING = "warning",
  WRITINGS = "writings",
  WXT = "wxt",
  YOUTUBE = "youtube",
}

const color =
  {
    css: "text-[#264de4]",
    swift: "text-[#F05138]",
    nodejs: "text-[#3c873a]",
    git: "text-[#F1502F]",
    html: "text-[#E44D26]",
    javascript: "text-[#F0DB4F]",
    typescript: "text-[#3178C6]",
    python: "text-[#306998]",
    react: "text-[#61DAFB]",
    nextjs: "text-[#000000]",
    npm: "text-[#CB3837]",
    gitlab: "text-[#FC6D26]",
    docker: "text-[#2496ED]",
    kubernetes: "text-[#326CE5]",
    sql: "text-[#003B57]",
    eslint: "text-[#4B32C3]",
    bash: "text-black",
  }[name] || "text-gray-600";

const icons = Object.values(IconName) as string[];
---

{
  name && icons.includes(name) && (
    <AstroIcon
      name={name}
      size={size}
      class:list={[colored && color, className]}
    />
  )
}
