---
import { iconByLanguage } from "@constants";
import type { Lang } from "@models/type";
import { Icon } from "@ui-kit";
import { formatDate } from "@utils";

interface Props {
  entryId: string;
  name: string;
  href: string;
  topic: string;
  date: Date;
}

const { entryId, name, href, topic, date = new Date() } = Astro.props;
const locale = Astro.currentLocale as Lang;
const formattedDate = formatDate(date, locale, "short");

const currentPath = Astro.url.pathname.endsWith("/")
  ? Astro.url.pathname
  : `${Astro.url.pathname}/`;
const isActive = currentPath.startsWith(href);
---

<a
  href={href}
  class:list={[
    "border-b relative md:border-none border-slate-200 pl-4 pr-12 py-3 md:mx-3 md:rounded-lg md:p-3 box-content cursor-pointer",
    isActive && "bg-black pointer-events-none",
    !isActive && "hover:bg-gray-100 hover:outline hover:outline-gray-200",
  ]}
  data-entry-item
  data-name={name}
>
  {
    topic && iconByLanguage[topic as keyof typeof iconByLanguage] && (
      <Icon
        name={iconByLanguage[topic as keyof typeof iconByLanguage]}
        size={30}
        class="absolute top-0 right-4 h-full -z-1 opacity-10 grayscale-100"
      />
    )
  }
  <strong
    class:list={[
      "text-sm block leading-4.5 mb-1 font-medium break-words",
      isActive && "text-white",
    ]}>{name}</strong
  >
  <p
    class:list={[
      "flex gap-1 text-xs mb-0",
      isActive && "text-gray-300",
      !isActive && "text-gray-500",
    ]}
  >
    <span>{formattedDate}</span>
    Â·
    <span class="flex gap-1 items-center">
      <Icon name="views" size={16} />
      <span
        data-entry-view-count={entryId}
        class="empty:opacity-0 transition-opacity duration-700 whitespace-nowrap"
      ></span>
    </span>
  </p>
</a>
